/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Orb.Orb.models.operations;

import Orb.Orb.utils.SpeakeasyMetadata;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

public class PatchExternalCustomersCustomerIdUsageRequest {
    @SpeakeasyMetadata("request:mediaType=application/json")
    public PatchExternalCustomersCustomerIdUsageRequestBody requestBody;
    public PatchExternalCustomersCustomerIdUsageRequest withRequestBody(PatchExternalCustomersCustomerIdUsageRequestBody requestBody) {
        this.requestBody = requestBody;
        return this;
    }
    
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=external_customer_id")
    public String externalCustomerId;
    public PatchExternalCustomersCustomerIdUsageRequest withExternalCustomerId(String externalCustomerId) {
        this.externalCustomerId = externalCustomerId;
        return this;
    }
    
    /**
     * This bound is exclusive (i.e. events before this timestamp will be updated)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timeframe_end")
    public OffsetDateTime timeframeEnd;
    public PatchExternalCustomersCustomerIdUsageRequest withTimeframeEnd(OffsetDateTime timeframeEnd) {
        this.timeframeEnd = timeframeEnd;
        return this;
    }
    
    /**
     * This bound is inclusive (i.e. events with this timestamp onward, inclusive will be updated)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timeframe_start")
    public OffsetDateTime timeframeStart;
    public PatchExternalCustomersCustomerIdUsageRequest withTimeframeStart(OffsetDateTime timeframeStart) {
        this.timeframeStart = timeframeStart;
        return this;
    }
    
    public PatchExternalCustomersCustomerIdUsageRequest(@JsonProperty("external_customer_id") String externalCustomerId, @JsonProperty("timeframe_end") OffsetDateTime timeframeEnd, @JsonProperty("timeframe_start") OffsetDateTime timeframeStart) {
        this.externalCustomerId = externalCustomerId;
        this.timeframeEnd = timeframeEnd;
        this.timeframeStart = timeframeStart;
  }
}
