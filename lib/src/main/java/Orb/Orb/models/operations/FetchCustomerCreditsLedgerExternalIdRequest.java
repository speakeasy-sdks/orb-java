/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Orb.Orb.models.operations;

import Orb.Orb.utils.SpeakeasyMetadata;
import com.fasterxml.jackson.annotation.JsonProperty;

public class FetchCustomerCreditsLedgerExternalIdRequest {
    /**
     * Filters to a single status of ledger entry
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=entry_status")
    public FetchCustomerCreditsLedgerExternalIdEntryStatus entryStatus;

    public FetchCustomerCreditsLedgerExternalIdRequest withEntryStatus(FetchCustomerCreditsLedgerExternalIdEntryStatus entryStatus) {
        this.entryStatus = entryStatus;
        return this;
    }
    
    /**
     * Filter to a single type of ledger entry
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=entry_type")
    public FetchCustomerCreditsLedgerExternalIdEntryType entryType;

    public FetchCustomerCreditsLedgerExternalIdRequest withEntryType(FetchCustomerCreditsLedgerExternalIdEntryType entryType) {
        this.entryType = entryType;
        return this;
    }
    
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=external_customer_id")
    public String externalCustomerId;

    public FetchCustomerCreditsLedgerExternalIdRequest withExternalCustomerId(String externalCustomerId) {
        this.externalCustomerId = externalCustomerId;
        return this;
    }
    
    /**
     * Filter to ledger entries that affect at least this amount
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=minimum_amount")
    public Double minimumAmount;

    public FetchCustomerCreditsLedgerExternalIdRequest withMinimumAmount(Double minimumAmount) {
        this.minimumAmount = minimumAmount;
        return this;
    }
    
    public FetchCustomerCreditsLedgerExternalIdRequest(@JsonProperty("external_customer_id") String externalCustomerId) {
        this.externalCustomerId = externalCustomerId;
  }
}
