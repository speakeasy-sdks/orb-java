/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Orb.Orb.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateSubscriptionApplicationJSONPhaseOverrides {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discount")
    public Orb.Orb.models.shared.Discount discount;

    public CreateSubscriptionApplicationJSONPhaseOverrides withDiscount(Orb.Orb.models.shared.Discount discount) {
        this.discount = discount;
        return this;
    }
    
    /**
     * The new minimum amount for the phase. Providing `null` will clear the existing minimum, if it exists.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimum_amount")
    public String minimumAmount;

    public CreateSubscriptionApplicationJSONPhaseOverrides withMinimumAmount(String minimumAmount) {
        this.minimumAmount = minimumAmount;
        return this;
    }
    
    /**
     * The phase order that is being modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order")
    public Double order;

    public CreateSubscriptionApplicationJSONPhaseOverrides withOrder(Double order) {
        this.order = order;
        return this;
    }
    
    public CreateSubscriptionApplicationJSONPhaseOverrides(){}
}
