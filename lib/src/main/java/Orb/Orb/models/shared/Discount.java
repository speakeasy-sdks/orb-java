/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Orb.Orb.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Discount {
    /**
     * Only available if discount_type is `amount`. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount_discount")
    public String amountDiscount;

    public Discount withAmountDiscount(String amountDiscount) {
        this.amountDiscount = amountDiscount;
        return this;
    }
    
    /**
     * List of price_ids that this discount applies to. For plan/plan phase discounts, this can be a subset of prices.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applies_to_price_ids")
    public String[] appliesToPriceIds;

    public Discount withAppliesToPriceIds(String[] appliesToPriceIds) {
        this.appliesToPriceIds = appliesToPriceIds;
        return this;
    }
    
    @JsonProperty("discount_type")
    public DiscountDiscountType discountType;

    public Discount withDiscountType(DiscountDiscountType discountType) {
        this.discountType = discountType;
        return this;
    }
    
    /**
     * Only available if discount_type is `percentage`.This is a number between 0 and 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentage_discount")
    public Double percentageDiscount;

    public Discount withPercentageDiscount(Double percentageDiscount) {
        this.percentageDiscount = percentageDiscount;
        return this;
    }
    
    /**
     * Only available if discount_type is `trial`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trial_amount_discount")
    public String trialAmountDiscount;

    public Discount withTrialAmountDiscount(String trialAmountDiscount) {
        this.trialAmountDiscount = trialAmountDiscount;
        return this;
    }
    
    /**
     * Only available if discount_type is `usage`. Number of usage units that this discount is for
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usage_discount")
    public Double usageDiscount;

    public Discount withUsageDiscount(Double usageDiscount) {
        this.usageDiscount = usageDiscount;
        return this;
    }
    
    public Discount(@JsonProperty("discount_type") DiscountDiscountType discountType) {
        this.discountType = discountType;
  }
}
